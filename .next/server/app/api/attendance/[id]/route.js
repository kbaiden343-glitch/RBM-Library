"use strict";(()=>{var e={};e.id=462,e.ids=[462],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9382:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>R,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var n={};r.r(n),r.d(n,{DELETE:()=>u,GET:()=>c});var a=r(9303),o=r(8716),s=r(670),i=r(7070),d=r(2663);async function c(e,{params:t}){try{let e=await d._.attendance.findUnique({where:{id:t.id},include:{person:!0}});if(!e)return i.NextResponse.json({error:"Attendance record not found"},{status:404});return i.NextResponse.json(e)}catch(e){return console.error("Get attendance error:",e),i.NextResponse.json({error:"Failed to fetch attendance"},{status:500})}}async function u(e,{params:t}){try{if(!await d._.attendance.findUnique({where:{id:t.id}}))return i.NextResponse.json({error:"Attendance record not found"},{status:404});return await d._.attendance.delete({where:{id:t.id}}),i.NextResponse.json({message:"Attendance record deleted successfully"})}catch(e){return console.error("Delete attendance error:",e),i.NextResponse.json({error:"Failed to delete attendance"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/attendance/[id]/route",pathname:"/api/attendance/[id]",filename:"route",bundlePath:"app/api/attendance/[id]/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\Library Project\\app\\api\\attendance\\[id]\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:h}=p,f="/api/attendance/[id]/route";function R(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},2663:(e,t,r)=>{let n;r.d(t,{_:()=>n});let a=require("@prisma/client"),o=globalThis,s=process.env.DATABASE_URL||process.env.POSTGRES_URL||process.env.POSTGRES_PRISMA_URL,i=s?`${s}?connection_limit=1&pool_timeout=20&connect_timeout=60&schema=public&pgbouncer=true&prepared_statements=false`:s;try{n=o.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:i}}})}catch(e){console.warn("Prisma client not available, using fallback:",e),n={}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[948,972],()=>r(9382));module.exports=n})();