"use strict";(()=>{var e={};e.id=814,e.ids=[814],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},5019:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>g,patchFetch:()=>m,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>w,staticGenerationAsyncStorage:()=>h});var t={};s.r(t),s.d(t,{POST:()=>c});var a=s(9303),o=s(8716),n=s(670),i=s(7070),u=s(2663),p=s(8691);async function c(e){try{let{currentPassword:r,newPassword:s}=await e.json();if(!r||!s)return i.NextResponse.json({error:"Current password and new password are required"},{status:400});if(s.length<6)return i.NextResponse.json({error:"New password must be at least 6 characters long"},{status:400});let t=await u._.user.findFirst({where:{role:"ADMIN"}});if(!t)return i.NextResponse.json({error:"User not found"},{status:404});if(!await p.ZP.compare(r,t.password))return i.NextResponse.json({error:"Current password is incorrect"},{status:400});let a=await p.ZP.hash(s,12);return await u._.user.update({where:{id:t.id},data:{password:a}}),i.NextResponse.json({message:"Password changed successfully"})}catch(e){return console.error("Error changing password:",e),i.NextResponse.json({error:"Failed to change password"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/change-password/route",pathname:"/api/auth/change-password",filename:"route",bundlePath:"app/api/auth/change-password/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\Library Project\\app\\api\\auth\\change-password\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:l,staticGenerationAsyncStorage:h,serverHooks:w}=d,g="/api/auth/change-password/route";function m(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:h})}},2663:(e,r,s)=>{let t;s.d(r,{_:()=>t});let a=require("@prisma/client"),o=globalThis,n=process.env.DATABASE_URL||process.env.POSTGRES_URL||process.env.POSTGRES_PRISMA_URL,i=n?`${n}?connection_limit=1&pool_timeout=20&connect_timeout=60&schema=public&pgbouncer=true&prepared_statements=false`:n;try{t=o.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:i}}})}catch(e){console.warn("Prisma client not available, using fallback:",e),t={}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[948,972,691],()=>s(5019));module.exports=t})();