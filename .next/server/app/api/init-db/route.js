"use strict";(()=>{var e={};e.id=102,e.ids=[102],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},8413:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>D,patchFetch:()=>b,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var t={};s.r(t),s.d(t,{POST:()=>c});var a=s(9303),i=s(8716),o=s(670),n=s(7070),l=s(2663),u=s(8691);async function c(e){try{console.log("\uD83D\uDD0D Checking if admin user exists...");let e=await l._.user.findFirst({where:{role:"ADMIN"}});if(e)return console.log("✅ Admin user already exists:",e.email),n.NextResponse.json({success:!0,message:"Admin user already exists",email:e.email});console.log("\uD83D\uDC64 Creating default admin user...");let r=await u.ZP.hash("admin123",12),s=await l._.user.create({data:{name:"Admin User",email:"admin@library.com",password:r,role:"ADMIN"}});return console.log("✅ Admin user created successfully!"),console.log("\uD83D\uDCE7 Email:",s.email),console.log("\uD83D\uDD11 Password: admin123"),n.NextResponse.json({success:!0,message:"Admin user created successfully",email:s.email,password:"admin123"})}catch(e){return console.error("❌ Error initializing database:",e),n.NextResponse.json({error:"Failed to initialize database"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/init-db/route",pathname:"/api/init-db",filename:"route",bundlePath:"app/api/init-db/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\Library Project\\app\\api\\init-db\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:p,staticGenerationAsyncStorage:m,serverHooks:g}=d,D="/api/init-db/route";function b(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},2663:(e,r,s)=>{let t;s.d(r,{_:()=>t});let a=require("@prisma/client"),i=globalThis,o=process.env.DATABASE_URL||process.env.POSTGRES_URL||process.env.POSTGRES_PRISMA_URL,n=o?`${o}?connection_limit=1&pool_timeout=20&connect_timeout=60&schema=public&pgbouncer=true&prepared_statements=false`:o;try{t=i.prisma??new a.PrismaClient({log:["error"],datasources:{db:{url:n}}})}catch(e){console.warn("Prisma client not available, using fallback:",e),t={}}}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[948,972,691],()=>s(8413));module.exports=t})();