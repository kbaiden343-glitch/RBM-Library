"use strict";(()=>{var e={};e.id=509,e.ids=[509],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7572:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>R,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>f,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{DELETE:()=>c,GET:()=>d,PUT:()=>u});var o=t(9303),n=t(8716),a=t(670),i=t(7070),p=t(2663);async function d(e,{params:r}){try{let e=await p._.person.findUnique({where:{id:r.id},include:{attendance:{orderBy:{checkInTime:"desc"},take:10},borrowings:{include:{book:!0},orderBy:{createdAt:"desc"},take:5},reservations:{include:{book:!0},orderBy:{createdAt:"desc"},take:5}}});if(!e)return i.NextResponse.json({error:"Person not found"},{status:404});return i.NextResponse.json(e)}catch(e){return console.error("Get person error:",e),i.NextResponse.json({error:"Failed to fetch person"},{status:500})}}async function u(e,{params:r}){try{let{name:t,email:s,phone:o,address:n,personType:a,occupationType:d,status:u,notes:c,emergencyContact:l}=await e.json(),m=await p._.person.findUnique({where:{id:r.id}});if(!m)return i.NextResponse.json({error:"Person not found"},{status:404});if(s!==m.email&&await p._.person.findUnique({where:{email:s}}))return i.NextResponse.json({error:"Email is already taken by another person"},{status:409});let h={name:t||m.name,email:s||m.email,phone:void 0!==o?o:m.phone,address:void 0!==n?n:m.address,personType:a||m.personType,status:u||m.status,notes:void 0!==c?c:m.notes,emergencyContact:void 0!==l?l:m.emergencyContact,membershipDate:"MEMBER"!==a||m.membershipDate?m.membershipDate:new Date},f=await p._.person.update({where:{id:r.id},data:h});return i.NextResponse.json(f)}catch(e){return console.error("Update person error:",e),i.NextResponse.json({error:"Failed to update person"},{status:500})}}async function c(e,{params:r}){try{if(!await p._.person.findUnique({where:{id:r.id}}))return i.NextResponse.json({error:"Person not found"},{status:404});return await p._.person.delete({where:{id:r.id}}),i.NextResponse.json({message:"Person deleted successfully"},{status:200})}catch(e){return console.error("Delete person error:",e),i.NextResponse.json({error:"Failed to delete person"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/persons/[id]/route",pathname:"/api/persons/[id]",filename:"route",bundlePath:"app/api/persons/[id]/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\Library Project\\app\\api\\persons\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:f}=l,R="/api/persons/[id]/route";function y(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:h})}},2663:(e,r,t)=>{let s;t.d(r,{_:()=>s});let o=require("@prisma/client"),n=globalThis,a=process.env.DATABASE_URL||process.env.POSTGRES_URL||process.env.POSTGRES_PRISMA_URL,i=a?`${a}?connection_limit=1&pool_timeout=20&connect_timeout=60&schema=public&pgbouncer=true&prepared_statements=false`:a;try{s=n.prisma??new o.PrismaClient({log:["error"],datasources:{db:{url:i}}})}catch(e){console.warn("Prisma client not available, using fallback:",e),s={}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972],()=>t(7572));module.exports=s})();