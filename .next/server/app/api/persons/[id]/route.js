"use strict";(()=>{var e={};e.id=509,e.ids=[509],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7572:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>y,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>x,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{DELETE:()=>c,GET:()=>p,PUT:()=>u});var o=t(9303),n=t(8716),a=t(670),i=t(7070),d=t(2663);async function p(e,{params:r}){try{let e=await d._.person.findUnique({where:{id:r.id},include:{attendance:{orderBy:{checkInTime:"desc"},take:10},borrowings:{include:{book:!0},orderBy:{createdAt:"desc"},take:5},reservations:{include:{book:!0},orderBy:{createdAt:"desc"},take:5}}});if(!e)return i.NextResponse.json({error:"Person not found"},{status:404});return i.NextResponse.json(e)}catch(e){return console.error("Get person error:",e),i.NextResponse.json({error:"Failed to fetch person"},{status:500})}}async function u(e,{params:r}){try{let{name:t,email:s,phone:o,address:n,personType:a,status:p,notes:u,emergencyContact:c}=await e.json(),l=await d._.person.findUnique({where:{id:r.id}});if(!l)return i.NextResponse.json({error:"Person not found"},{status:404});if(s!==l.email&&await d._.person.findUnique({where:{email:s}}))return i.NextResponse.json({error:"Email is already taken by another person"},{status:409});let m=await d._.person.update({where:{id:r.id},data:{name:t||l.name,email:s||l.email,phone:void 0!==o?o:l.phone,address:void 0!==n?n:l.address,personType:a||l.personType,status:p||l.status,notes:void 0!==u?u:l.notes,emergencyContact:void 0!==c?c:l.emergencyContact,membershipDate:"MEMBER"!==a||l.membershipDate?l.membershipDate:new Date}});return i.NextResponse.json(m)}catch(e){return console.error("Update person error:",e),i.NextResponse.json({error:"Failed to update person"},{status:500})}}async function c(e,{params:r}){try{if(!await d._.person.findUnique({where:{id:r.id}}))return i.NextResponse.json({error:"Person not found"},{status:404});return await d._.person.delete({where:{id:r.id}}),i.NextResponse.json({message:"Person deleted successfully"},{status:200})}catch(e){return console.error("Delete person error:",e),i.NextResponse.json({error:"Failed to delete person"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/persons/[id]/route",pathname:"/api/persons/[id]",filename:"route",bundlePath:"app/api/persons/[id]/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\Library Project\\app\\api\\persons\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:x}=l,y="/api/persons/[id]/route";function f(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:h})}},2663:(e,r,t)=>{t.d(r,{_:()=>i});let s=require("@prisma/client"),o=globalThis,n=process.env.DATABASE_URL,a=n?`${n}?connection_limit=5&pool_timeout=20&connect_timeout=60`:n,i=o.prisma??new s.PrismaClient({log:["error"],datasources:{db:{url:a}}});process.on("beforeExit",async()=>{await i.$disconnect()}),process.on("SIGINT",async()=>{await i.$disconnect(),process.exit(0)}),process.on("SIGTERM",async()=>{await i.$disconnect(),process.exit(0)})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972],()=>t(7572));module.exports=s})();