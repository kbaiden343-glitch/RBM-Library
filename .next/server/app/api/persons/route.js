"use strict";(()=>{var e={};e.id=824,e.ids=[824],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7127:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>h,patchFetch:()=>g,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>y,staticGenerationAsyncStorage:()=>m});var r={};t.r(r),t.d(r,{GET:()=>l,POST:()=>c});var n=t(9303),o=t(8716),a=t(670),i=t(7070),p=t(2663);async function l(e){try{let{searchParams:s}=new URL(e.url),t=parseInt(s.get("page")||"1"),r=parseInt(s.get("limit")||"50"),n=s.get("search")||"",o=s.get("personType")||"",a=s.get("status")||"",l=(t-1)*r,c={};n&&(c.OR=[{name:{contains:n,mode:"insensitive"}},{email:{contains:n,mode:"insensitive"}},{phone:{contains:n,mode:"insensitive"}}]),o&&"all"!==o&&(c.personType=o),a&&"all"!==a&&(c.status=a);let[u,d]=await Promise.all([p._.person.findMany({where:c,skip:l,take:r,orderBy:{createdAt:"desc"}}),p._.person.count({where:c})]);return i.NextResponse.json({persons:u,pagination:{page:t,limit:r,total:d,pages:Math.ceil(d/r)}})}catch(e){return console.error("Get persons error:",e),i.NextResponse.json({error:"Failed to fetch persons"},{status:500})}}async function c(e){try{let{name:s,email:t,phone:r,address:n,personType:o,notes:a,emergencyContact:l}=await e.json();if(!s||!t)return i.NextResponse.json({error:"Name and email are required"},{status:400});let c=await p._.person.findUnique({where:{email:t}});if(c)return i.NextResponse.json({error:`A ${c.personType.toLowerCase()} with email "${t}" already exists`,details:`Person: ${c.name}`},{status:409});let u=null;try{u=await p._.member.findUnique({where:{email:t}})}catch(e){console.log("Legacy members table check skipped:",e)}if(u)return i.NextResponse.json({error:`A member with email "${t}" already exists in the legacy system`,details:`Member: ${u.name}`},{status:409});let d=await p._.person.create({data:{name:s,email:t,phone:r||null,address:n||null,personType:o||"VISITOR",notes:a||null,emergencyContact:l||null,membershipDate:"MEMBER"===o?new Date:null}});return console.log("Person created successfully:",{id:d.id,name:d.name,email:d.email,personType:d.personType}),i.NextResponse.json(d,{status:201})}catch(e){if(console.error("Create person error:",e),e instanceof Error){if(e.message.includes("Unique constraint failed"))return i.NextResponse.json({error:"A person with this email already exists"},{status:409});if(e.message.includes("Max client connections reached")||e.message.includes("connection pool"))return i.NextResponse.json({error:"Database temporarily unavailable. Please try again in a moment.",details:"Connection pool limit reached"},{status:503})}return i.NextResponse.json({error:"Failed to create person",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let u=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/persons/route",pathname:"/api/persons",filename:"route",bundlePath:"app/api/persons/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\Library Project\\app\\api\\persons\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:y}=u,h="/api/persons/route";function g(){return(0,a.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:m})}},2663:(e,s,t)=>{t.d(s,{_:()=>i});let r=require("@prisma/client"),n=globalThis,o=process.env.DATABASE_URL,a=o?`${o}?connection_limit=5&pool_timeout=20&connect_timeout=60`:o,i=n.prisma??new r.PrismaClient({log:["error"],datasources:{db:{url:a}}});process.on("beforeExit",async()=>{await i.$disconnect()}),process.on("SIGINT",async()=>{await i.$disconnect(),process.exit(0)}),process.on("SIGTERM",async()=>{await i.$disconnect(),process.exit(0)})}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[948,972],()=>t(7127));module.exports=r})();