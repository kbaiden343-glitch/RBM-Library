"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[663],{6501:function(e,a,t){t.d(a,{AuthProvider:function(){return c},a:function(){return y}});var r=t(7437),o=t(2265),s=t(9064);let n=(0,o.createContext)(null),i={user:null,isAuthenticated:!1,loading:!1,error:null},d=(e,a)=>{switch(a.type){case"LOGIN_START":return{...e,loading:!0,error:null};case"LOGIN_SUCCESS":return{...e,user:a.payload,isAuthenticated:!0,loading:!1,error:null};case"LOGIN_FAILURE":return{...e,user:null,isAuthenticated:!1,loading:!1,error:a.payload};case"LOGOUT":return{...e,user:null,isAuthenticated:!1,loading:!1,error:null};case"CLEAR_ERROR":return{...e,error:null};case"SET_LOADING":return{...e,loading:a.payload};default:return e}},l=e=>{switch(e){case"ADMIN":return["all"];case"LIBRARIAN":return["books:read","books:create","books:update","books:delete","members:read","members:create","members:update","members:delete","borrowing:read","borrowing:create","borrowing:update","reservations:read","reservations:create","reservations:update","attendance:read","attendance:create","manage_attendance","reports:read","dashboard:read","settings:read"];case"MEMBER":return["books:read","borrowing:read","reservations:read","reservations:create","attendance:create"];default:return[]}},c=e=>{let{children:a}=e,[t,c]=(0,o.useReducer)(d,i);(0,o.useEffect)(()=>{let e=localStorage.getItem("library_user"),a=localStorage.getItem("token");if(e&&a)try{let a=JSON.parse(e);c({type:"LOGIN_SUCCESS",payload:a})}catch(e){localStorage.removeItem("library_user"),localStorage.removeItem("token")}},[]);let y=async(e,a)=>{c({type:"LOGIN_START"});try{let t=await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:a})}),r=await t.json();if(t.ok){let e={...r.user,permissions:l(r.user.role)};c({type:"LOGIN_SUCCESS",payload:e}),localStorage.setItem("library_user",JSON.stringify(e)),localStorage.setItem("token",r.token),s.ZP.success("Welcome back, ".concat(e.name,"!"))}else c({type:"LOGIN_FAILURE",payload:r.error||"Login failed"}),s.ZP.error(r.error||"Login failed")}catch(e){c({type:"LOGIN_FAILURE",payload:"Login failed. Please try again."}),s.ZP.error("Login failed. Please try again.")}},p=async function(e,a,t){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"MEMBER";c({type:"LOGIN_START"});try{let o=await fetch("/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:a,password:t,role:r})}),n=await o.json();if(o.ok){let e={...n.user,permissions:l(n.user.role)};c({type:"LOGIN_SUCCESS",payload:e}),localStorage.setItem("library_user",JSON.stringify(e)),localStorage.setItem("token",n.token),s.ZP.success("Welcome, ".concat(e.name,"!"))}else c({type:"LOGIN_FAILURE",payload:n.error||"Registration failed"}),s.ZP.error(n.error||"Registration failed")}catch(e){c({type:"LOGIN_FAILURE",payload:"Registration failed. Please try again."}),s.ZP.error("Registration failed. Please try again.")}};return(0,r.jsx)(n.Provider,{value:{state:t,login:y,register:p,logout:()=>{c({type:"LOGOUT"}),localStorage.removeItem("library_user"),localStorage.removeItem("token"),s.ZP.success("Logged out successfully")},clearError:()=>{c({type:"CLEAR_ERROR"})},hasPermission:e=>!!t.user&&(!!t.user.permissions.includes("all")||t.user.permissions.includes(e))},children:a})},y=()=>{let e=(0,o.useContext)(n);if(!e)throw Error("useAuth must be used within an AuthProvider");return e}},700:function(e,a,t){t.d(a,{LibraryProvider:function(){return y},y:function(){return p}});var r=t(7437),o=t(2265),s=t(9064),n=t(9124);let i=(0,o.createContext)(null),d={books:[],members:[],borrowings:[],reservations:[],attendance:[],currentUser:null,loading:!1,error:null},l=(e,a)=>{switch(a.type){case"SET_LOADING":return{...e,loading:a.payload};case"SET_ERROR":return{...e,error:a.payload};case"SET_BOOKS":return{...e,books:a.payload};case"ADD_BOOK":return{...e,books:[...e.books,a.payload]};case"UPDATE_BOOK":return{...e,books:e.books.map(e=>e.id===a.payload.id?a.payload:e)};case"DELETE_BOOK":return{...e,books:e.books.filter(e=>e.id!==a.payload)};case"SET_MEMBERS":return{...e,members:a.payload};case"ADD_MEMBER":return{...e,members:[...e.members,a.payload]};case"UPDATE_MEMBER":return{...e,members:e.members.map(e=>e.id===a.payload.id?a.payload:e)};case"DELETE_MEMBER":return{...e,members:e.members.filter(e=>e.id!==a.payload)};case"SET_BORROWINGS":return{...e,borrowings:a.payload};case"ADD_BORROWING":return{...e,borrowings:[...e.borrowings,a.payload]};case"RETURN_BOOK":return{...e,borrowings:e.borrowings.map(e=>e.id===a.payload.id?a.payload:e)};case"SET_RESERVATIONS":return{...e,reservations:a.payload};case"ADD_RESERVATION":return{...e,reservations:[...e.reservations,a.payload]};case"SET_ATTENDANCE":return{...e,attendance:a.payload};case"ADD_ATTENDANCE":return{...e,attendance:[...e.attendance,a.payload]};case"SET_CURRENT_USER":return{...e,currentUser:a.payload};default:return e}},c=async function(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=localStorage.getItem("token"),r=await fetch(e,{...a,headers:{"Content-Type":"application/json",...t&&{Authorization:"Bearer ".concat(t)},...a.headers}});if(!r.ok)throw Error((await r.json()).error||"API call failed");return r.json()},y=e=>{let{children:a}=e,[t,y]=(0,o.useReducer)(l,d),{addNotification:p}=(0,n.z)(),u=async()=>{try{y({type:"SET_LOADING",payload:!0});let e=await c("/api/books");y({type:"SET_BOOKS",payload:e.books||e})}catch(e){console.error("Error fetching books:",e),y({type:"SET_ERROR",payload:"Failed to fetch books"}),s.ZP.error("Failed to fetch books")}finally{y({type:"SET_LOADING",payload:!1})}},E=async()=>{try{var e;y({type:"SET_LOADING",payload:!0});let a=await c("/api/persons?limit=100"),t=(null===(e=a.persons)||void 0===e?void 0:e.map(e=>({id:e.id,name:e.name,email:e.email,phone:e.phone||"",address:e.address||"",membershipDate:e.membershipDate||e.createdAt,status:"ACTIVE"===e.status?"ACTIVE":"INACTIVE",personType:e.personType,createdAt:e.createdAt,updatedAt:e.updatedAt})))||[];y({type:"SET_MEMBERS",payload:t})}catch(e){console.error("Error fetching members:",e),y({type:"SET_ERROR",payload:"Failed to fetch members"}),s.ZP.error("Failed to fetch members")}finally{y({type:"SET_LOADING",payload:!1})}},m=async()=>{try{y({type:"SET_LOADING",payload:!0});let e=await c("/api/borrowings");y({type:"SET_BORROWINGS",payload:e.borrowings||e})}catch(e){console.error("Error fetching borrowings:",e),y({type:"SET_ERROR",payload:"Failed to fetch borrowings"}),s.ZP.error("Failed to fetch borrowings")}finally{y({type:"SET_LOADING",payload:!1})}},A=async()=>{try{y({type:"SET_LOADING",payload:!0});let e=await c("/api/reservations");y({type:"SET_RESERVATIONS",payload:e.reservations||e})}catch(e){console.error("Error fetching reservations:",e),y({type:"SET_ERROR",payload:"Failed to fetch reservations"}),s.ZP.error("Failed to fetch reservations")}finally{y({type:"SET_LOADING",payload:!1})}},b=async()=>{try{y({type:"SET_LOADING",payload:!0});let e=await c("/api/attendance");y({type:"SET_ATTENDANCE",payload:e.attendance||e})}catch(e){console.error("Error fetching attendance:",e),y({type:"SET_ERROR",payload:"Failed to fetch attendance"}),s.ZP.error("Failed to fetch attendance")}finally{y({type:"SET_LOADING",payload:!1})}};return(0,o.useEffect)(()=>{(async()=>{try{await Promise.all([u(),E(),m(),A(),b()])}catch(e){console.error("Error loading initial data:",e),s.ZP.error("Error loading library data")}})()},[]),(0,r.jsx)(i.Provider,{value:{state:t,dispatch:y,addBook:async e=>{try{y({type:"SET_LOADING",payload:!0});let a=await c("/api/books",{method:"POST",body:JSON.stringify(e)});y({type:"ADD_BOOK",payload:a}),s.ZP.success("Book added successfully!"),p({type:"success",title:"New Book Added",message:'"'.concat(e.title,'" by ').concat(e.author," has been added to the catalog.")})}catch(e){console.error("Error adding book:",e),s.ZP.error("Failed to add book")}finally{y({type:"SET_LOADING",payload:!1})}},updateBook:async e=>{try{y({type:"SET_LOADING",payload:!0});let a=await c("/api/books/".concat(e.id),{method:"PUT",body:JSON.stringify(e)});y({type:"UPDATE_BOOK",payload:a}),s.ZP.success("Book updated successfully!"),p({type:"info",title:"Book Updated",message:'"'.concat(e.title,'" has been updated.')})}catch(e){console.error("Error updating book:",e),s.ZP.error("Failed to update book")}finally{y({type:"SET_LOADING",payload:!1})}},deleteBook:async e=>{try{y({type:"SET_LOADING",payload:!0}),await c("/api/books/".concat(e),{method:"DELETE"}),y({type:"DELETE_BOOK",payload:e}),s.ZP.success("Book deleted successfully!"),p({type:"warning",title:"Book Deleted",message:"A book with ID ".concat(e," has been removed from the catalog.")})}catch(e){console.error("Error deleting book:",e),s.ZP.error("Failed to delete book")}finally{y({type:"SET_LOADING",payload:!1})}},addMember:async e=>{try{y({type:"SET_LOADING",payload:!0});let a={name:e.name,email:e.email,phone:e.phone,address:e.address,personType:"MEMBER",status:"ACTIVE"},t=await c("/api/persons",{method:"POST",body:JSON.stringify(a)}),r={id:t.id,name:t.name,email:t.email,phone:t.phone||"",address:t.address||"",membershipDate:t.membershipDate||t.createdAt,status:"ACTIVE"===t.status?"ACTIVE":"INACTIVE",createdAt:t.createdAt,updatedAt:t.updatedAt};y({type:"ADD_MEMBER",payload:r}),s.ZP.success("Member added successfully!"),p({type:"success",title:"New Member Added",message:"".concat(e.name," has been added as a new member.")})}catch(e){console.error("Error adding member:",e),s.ZP.error("Failed to add member")}finally{y({type:"SET_LOADING",payload:!1})}},updateMember:async e=>{try{y({type:"SET_LOADING",payload:!0});let a={name:e.name,email:e.email,phone:e.phone,address:e.address,personType:"MEMBER",status:"ACTIVE"===e.status?"ACTIVE":"INACTIVE"},t=await c("/api/persons/".concat(e.id),{method:"PUT",body:JSON.stringify(a)}),r={id:t.id,name:t.name,email:t.email,phone:t.phone||"",address:t.address||"",membershipDate:t.membershipDate||t.createdAt,status:"ACTIVE"===t.status?"ACTIVE":"INACTIVE",createdAt:t.createdAt,updatedAt:t.updatedAt};y({type:"UPDATE_MEMBER",payload:r}),s.ZP.success("Member updated successfully!"),p({type:"info",title:"Member Updated",message:"".concat(e.name,"'s details have been updated.")})}catch(e){console.error("Error updating member:",e),s.ZP.error("Failed to update member")}finally{y({type:"SET_LOADING",payload:!1})}},deleteMember:async e=>{try{y({type:"SET_LOADING",payload:!0}),await c("/api/persons/".concat(e),{method:"DELETE"}),y({type:"DELETE_MEMBER",payload:e}),s.ZP.success("Member deleted successfully!"),p({type:"warning",title:"Member Deleted",message:"A member has been removed from the system."})}catch(e){console.error("Error deleting member:",e),s.ZP.error("Failed to delete member")}finally{y({type:"SET_LOADING",payload:!1})}},borrowBook:async e=>{try{y({type:"SET_LOADING",payload:!0});let a=await c("/api/borrowings",{method:"POST",body:JSON.stringify(e)});y({type:"ADD_BORROWING",payload:a}),s.ZP.success("Book borrowed successfully!"),p({type:"success",title:"Book Borrowed",message:"Book ID ".concat(e.bookId," borrowed by Member ID ").concat(e.memberId||e.personId,".")})}catch(e){console.error("Error borrowing book:",e),s.ZP.error("Failed to borrow book")}finally{y({type:"SET_LOADING",payload:!1})}},returnBook:async e=>{try{y({type:"SET_LOADING",payload:!0});let a=await c("/api/borrowings/".concat(e),{method:"PUT",body:JSON.stringify({action:"return"})});y({type:"RETURN_BOOK",payload:a}),s.ZP.success("Book returned successfully!"),p({type:"info",title:"Book Returned",message:"Borrowing ID ".concat(e," has been returned.")})}catch(e){console.error("Error returning book:",e),s.ZP.error("Failed to return book")}finally{y({type:"SET_LOADING",payload:!1})}},addReservation:async e=>{try{y({type:"SET_LOADING",payload:!0});let a=await c("/api/reservations",{method:"POST",body:JSON.stringify(e)});y({type:"ADD_RESERVATION",payload:a}),s.ZP.success("Book reserved successfully!"),p({type:"info",title:"Book Reserved",message:"Book ID ".concat(e.bookId," reserved by Member ID ").concat(e.memberId,".")})}catch(e){console.error("Error adding reservation:",e),s.ZP.error("Failed to reserve book")}finally{y({type:"SET_LOADING",payload:!1})}},addAttendance:async e=>{try{y({type:"SET_LOADING",payload:!0});let a=await c("/api/attendance",{method:"POST",body:JSON.stringify(e)});y({type:"ADD_ATTENDANCE",payload:a}),s.ZP.success("Attendance recorded successfully!"),p({type:"info",title:"Attendance Recorded",message:"Member ID ".concat(e.memberId," checked in.")})}catch(e){console.error("Error adding attendance:",e),s.ZP.error("Failed to record attendance")}finally{y({type:"SET_LOADING",payload:!1})}},getRecommendations:e=>{let a=t.borrowings.filter(a=>a.memberId===e).map(e=>t.books.find(a=>a.id===e.bookId)).filter(Boolean),r=a.map(e=>e.category),o=r.sort((e,a)=>r.filter(a=>a===e).length-r.filter(e=>e===a).length).pop();return t.books.filter(e=>e.category===o&&!a.some(a=>a.id===e.id)&&"AVAILABLE"===e.status).slice(0,3)},fetchBooks:u,fetchMembers:E,fetchBorrowings:m,fetchReservations:A,fetchAttendance:b},children:a})},p=()=>{let e=(0,o.useContext)(i);if(!e)throw Error("useLibrary must be used within a LibraryProvider");return e}},9124:function(e,a,t){t.d(a,{NotificationProvider:function(){return l},z:function(){return c}});var r=t(7437),o=t(2265),s=t(9064);let n=(0,o.createContext)(null),i={notifications:[],unreadCount:0},d=(e,a)=>{switch(a.type){case"ADD_NOTIFICATION":let t={...a.payload,id:Date.now().toString(),timestamp:new Date,read:!1};return{...e,notifications:[t,...e.notifications],unreadCount:e.unreadCount+1};case"MARK_AS_READ":return{...e,notifications:e.notifications.map(e=>e.id===a.payload?{...e,read:!0}:e),unreadCount:Math.max(0,e.unreadCount-1)};case"MARK_ALL_AS_READ":return{...e,notifications:e.notifications.map(e=>({...e,read:!0})),unreadCount:0};case"REMOVE_NOTIFICATION":let r=e.notifications.find(e=>e.id===a.payload);return{...e,notifications:e.notifications.filter(e=>e.id!==a.payload),unreadCount:r&&!r.read?Math.max(0,e.unreadCount-1):e.unreadCount};case"CLEAR_ALL_NOTIFICATIONS":return{...e,notifications:[],unreadCount:0};default:return e}},l=e=>{let{children:a}=e,[t,l]=(0,o.useReducer)(d,i);return(0,o.useEffect)(()=>{let e=localStorage.getItem("library_notifications");if(e)try{JSON.parse(e).forEach(e=>{l({type:"ADD_NOTIFICATION",payload:e})})}catch(e){localStorage.removeItem("library_notifications")}},[]),(0,o.useEffect)(()=>{localStorage.setItem("library_notifications",JSON.stringify(t.notifications))},[t.notifications]),(0,r.jsx)(n.Provider,{value:{state:t,addNotification:e=>{switch(l({type:"ADD_NOTIFICATION",payload:e}),e.type){case"success":s.ZP.success(e.message);break;case"error":s.ZP.error(e.message);break;case"warning":(0,s.ZP)(e.message,{icon:"⚠️"});break;default:(0,s.ZP)(e.message)}},markAsRead:e=>{l({type:"MARK_AS_READ",payload:e})},markAllAsRead:()=>{l({type:"MARK_ALL_AS_READ"})},removeNotification:e=>{l({type:"REMOVE_NOTIFICATION",payload:e})},clearAllNotifications:()=>{l({type:"CLEAR_ALL_NOTIFICATIONS"})}},children:a})},c=()=>{let e=(0,o.useContext)(n);if(!e)throw Error("useNotifications must be used within a NotificationProvider");return e}}}]);